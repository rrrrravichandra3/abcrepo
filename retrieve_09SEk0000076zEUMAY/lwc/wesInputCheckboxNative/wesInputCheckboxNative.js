export default (function () { 
  function escapeXml(unsafe) {
    return unsafe.replace(/[<>&'"]/g, function (c) {
      switch (c) {
        case "<":
          return "&lt;";
        case ">":
          return "&gt;";
        case "&":
          return "&amp;";
        case "'":
          return "&apos;";
        case '"':
          return "&quot;";
      }
    });
  }

  function createTemplateFromHtmlNode(el) {
    let node;

    if (el.tagName === "style") {
      node = document.createElement("style");
      const styleText = el.innerHTML;
      node.append(document.createTextNode(styleText));
    } else {
      // createElement is needed since importNode doesn't transfer special properties
      node = document.createElement(el.tagName);

      el.getAttributeNames().forEach((name) => {
        node.setAttribute(name, el.getAttribute(name));
      });
    } 

    for (let i = 0; i < el.children.length; i++) {
      node.appendChild(createTemplateFromHtmlNode(el.children[i]));
    }

    return node;
  }

  function createTemplateFromHtml(html) {
    const parser = new DOMParser();
    parser.async = false;
    const xml = "<root>" + html + "</root>";
    let element;

    const template = document.createElement("template");
    element = parser.parseFromString(xml, "text/xml").documentElement;

    for (let i = 0; i < element.children.length; i++) {
      template.content.appendChild(createTemplateFromHtmlNode(element.children[i]));
    }

    return template;
  }
  
  const e={html:(e,...t)=>n.html(e,...t).content},n={html(markup, ...t) { return createTemplateFromHtml(markup + t.join('')); }},t=Symbol("defaultState"),o=Symbol("delegatesFocus"),r=Symbol("firstRender"),s=Symbol("focusTarget"),i=Symbol("hasDynamicTemplate"),c=Symbol("ids"),a=Symbol("nativeInternals"),l=Symbol("raiseChangeEvents"),d=Symbol("render"),h=Symbol("renderChanges"),u=Symbol("rendered"),b=Symbol("rendering"),p=Symbol("setState"),m=Symbol("shadowRoot"),g=Symbol("shadowRootMode"),f=Symbol("state"),v=Symbol("stateEffects"),k=Symbol("template"),x=Symbol("checkSize"),w=Symbol("closestAvailableItemIndex"),y=Symbol("contentSlot"),S=t,C=Symbol("defaultTabIndex"),z=o,E=Symbol("effectEndTarget"),A=r,T=s,L=Symbol("getItemText"),R=Symbol("goDown"),O=Symbol("goEnd"),I=Symbol("goFirst"),j=Symbol("goLast"),P=Symbol("goLeft"),D=Symbol("goNext"),F=Symbol("goPrevious"),N=Symbol("goRight"),M=Symbol("goStart"),q=Symbol("goToItemWithPrefix"),_=Symbol("goUp"),B=i,U=c,H=Symbol("inputDelegate"),W=Symbol("itemsDelegate"),V=Symbol("keydown"),$=Symbol("mouseenter"),X=Symbol("mouseleave"),G=a,Z=l,J=d,K=h,Q=Symbol("renderDataToElement"),Y=u,ee=b,ne=Symbol("scrollTarget"),te=p,oe=m,re=g,se=Symbol("startEffect"),ie=f,ce=v,ae=Symbol("swipeDown"),le=Symbol("swipeDownComplete"),de=Symbol("swipeLeft"),he=Symbol("swipeLeftTransitionEnd"),ue=Symbol("swipeRight"),be=Symbol("swipeRightTransitionEnd"),pe=Symbol("swipeUp"),me=Symbol("swipeUpComplete"),ge=Symbol("swipeStart"),fe=Symbol("swipeTarget"),ve=Symbol("tap"),ke=k,xe=Symbol("toggleSelectedFlag");"true"===new URLSearchParams("").get("elixdebug")&&(window.elix={internal:{checkSize:x,closestAvailableItemIndex:w,contentSlot:y,defaultState:S,defaultTabIndex:C,delegatesFocus:z,effectEndTarget:E,firstRender:A,focusTarget:T,getItemText:L,goDown:R,goEnd:O,goFirst:I,goLast:j,goLeft:P,goNext:D,goPrevious:F,goRight:N,goStart:M,goToItemWithPrefix:q,goUp:_,hasDynamicTemplate:B,ids:U,inputDelegate:H,itemsDelegate:W,keydown:V,mouseenter:$,mouseleave:X,nativeInternals:G,event:event,raiseChangeEvents:Z,render:J,renderChanges:K,renderDataToElement:Q,rendered:Y,rendering:ee,scrollTarget:ne,setState:te,shadowRoot:oe,shadowRootMode:re,startEffect:se,state:ie,stateEffects:ce,swipeDown:ae,swipeDownComplete:le,swipeLeft:de,swipeLeftTransitionEnd:he,swipeRight:ue,swipeRightTransitionEnd:be,swipeUp:pe,swipeUpComplete:me,swipeStart:ge,swipeTarget:fe,tap:ve,template:ke,toggleSelectedFlag:xe}});const we={tabindex:"tabIndex"},ye={tabIndex:"tabindex"};function Se(e){if(e===HTMLElement||Object.getPrototypeOf(e.prototype)===null)return[];const n=Object.getPrototypeOf(e.prototype).constructor;let t=n.observedAttributes;t||(t=Se(n));const o=Object.getOwnPropertyNames(e.prototype).filter((n=>{const t=Object.getOwnPropertyDescriptor(e.prototype,n);return t&&"function"==typeof t.set})).map((e=>function(e){let n=ye[e];if(!n){const t=/([A-Z])/g;n=e.replace(t,"-$1").toLowerCase(),ye[e]=n}return n}(e))).filter((e=>t.indexOf(e)<0));return t.concat(o)}const Ce={checked:!0,defer:!0,disabled:!0,hidden:!0,ismap:!0,multiple:!0,noresize:!0,readonly:!0,selected:!0},ze=Symbol("state"),Ee=Symbol("raiseChangeEventsInNextRender"),Ae=Symbol("changedSinceLastRender");function Te(e,n){const t={};for(const s in n)o=n[s],r=e[s],(o instanceof Date&&r instanceof Date?o.getTime()===r.getTime():o===r)||(t[s]=!0);var o,r;return t}const Le=new Map,Re=Symbol("shadowIdProxy"),Oe=Symbol("proxyElement"),Ie={get(e,n){const t=e[Oe][m];return t&&"string"==typeof n?t.getElementById(n):null}};const je=function(e){return class extends e{attributeChangedCallback(e,n,t){if(super.attributeChangedCallback&&super.attributeChangedCallback(e,n,t),t!==n&&!this[b]){const n=function(e){let n=we[e];if(!n){const t=/-([a-z])/g;n=e.replace(t,(e=>e[1].toUpperCase())),we[e]=n}return n}(e);if(n in this){const s=Ce[e]?(o=e,"boolean"==typeof(r=t)?r:"string"==typeof r&&(""===r||o.toLowerCase()===r.toLowerCase())):t;this[n]=s}}var o,r}static get observedAttributes(){return Se(this)}}}(function(e){class n extends e{constructor(){super(),this[r]=void 0,this[l]=!1,this[Ae]=null,this[p](this[t])}connectedCallback(){super.connectedCallback&&super.connectedCallback(),this[h]()}get[t](){return super[t]||{}}[d](e){super[d]&&super[d](e)}[h](){void 0===this[r]&&(this[r]=!0);const e=this[Ae];if(this[r]||e){const n=this[l];this[l]=this[Ee],this[Ee]=!1,this[b]=!0,this[d](e),this[b]=!1,this[Ae]=null,this[u](e),this[r]=!1,this[l]=n}}[u](e){super[u]&&super[u](e)}async[p](e){this[b]&&console.warn(`${this.constructor.name} called [setState] during rendering, which you should avoid.\nSee https://elix.org/documentation/ReactiveMixin.`);const{state:n,changed:t}=function(e,n){const t=Object.assign({},e[ze]),o={};let r=n;for(;;){const n=Te(t,r);if(0===Object.keys(n).length)break;Object.assign(t,r),Object.assign(o,n),r=e[v](t,n)}return{state:t,changed:o}}(this,e);if(this[ze]&&0===Object.keys(t).length)return;Object.freeze(n),this[ze]=n,this[l]&&(this[Ee]=!0);const o=void 0===this[r]||null!==this[Ae];this[Ae]=Object.assign(this[Ae]||{},t);this.isConnected&&!o&&(await Promise.resolve(),this[h]())}get[f](){return this[ze]}[v](e,n){return super[v]?super[v](e,n):{}}}return"true"===new URLSearchParams("").get("elixdebug")&&Object.defineProperty(n.prototype,"state",{get(){return this[f]}}),n}((Pe=HTMLElement,class extends Pe{get[c](){if(!this[Re]){const e={[Oe]:this};this[Re]=new Proxy(e,Ie)}return this[Re]}[d](e){if(super[d]&&super[d](e),void 0===this[m]){const e=function(e){let n=e[i]?void 0:Le.get(e.constructor);if(void 0===n){if(n=e[k],n&&!(n instanceof HTMLTemplateElement))throw`Warning: the [template] property for ${e.constructor.name} must return an HTMLTemplateElement.`;e[i]||Le.set(e.constructor,n||null)}return n}(this);if(e){const n=this.attachShadow({delegatesFocus:this[o],mode:this[g]}),t=document.importNode(e.content,!0);n.append(t),this[m]=n}else this[m]=null}}get[g](){return"closed"}})));var Pe;let De=!1;const Fe=Symbol("focusVisibleChangedListener");function Ne(t){return class extends t{constructor(){super(),this.addEventListener("focusout",(e=>{Promise.resolve().then((()=>{const n=e.relatedTarget||document.activeElement,t=this===n,o=function(e,n){let t=n;for(;t;){const n=t.assignedSlot||t.parentNode||t.host;if(n===e)return!0;t=n}return!1}(this,n);!t&&!o&&(this[te]({focusVisible:!1}),document.removeEventListener("focusvisiblechange",this[Fe]),this[Fe]=null)}))})),this.addEventListener("focusin",(()=>{Promise.resolve().then((()=>{this[ie].focusVisible!==De&&this[te]({focusVisible:De}),this[Fe]||(this[Fe]=()=>{this[te]({focusVisible:De})},document.addEventListener("focusvisiblechange",this[Fe]))}))}))}get[S](){return Object.assign(super[S]||{},{focusVisible:!1})}[J](e){if(super[J]&&super[J](e),e.focusVisible){const{focusVisible:e}=this[ie];this.toggleAttribute("focus-visible",e)}}get[ke](){const t=super[ke]||n.html``;return t.content.append(e.html(`
        <style>
          :host {
            outline: none;
          }

          :host([focus-visible]:focus-within) {
            outline-color: Highlight; /* Firefox */
            outline-color: -webkit-focus-ring-color; /* All other browsers */
            outline-style: auto;
          }
        </style>
      `)),t}}}function Me(e){if(De!==e){De=e;const n=new CustomEvent("focusvisiblechange",{detail:{focusVisible:De}});document.dispatchEvent(n)}}function qe(e){if(e.__esModule)return e;var n=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(e).forEach((function(t){var o=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(n,t,o.get?o:{enumerable:!0,get:function(){return e[t]}})})),n}window.addEventListener("keydown",(()=>{Me(!0)}),{capture:!0}),window.addEventListener("mousedown",(()=>{Me(!1)}),{capture:!0});var _e=qe(Object.freeze({__proto__:null,reflectAttribute:(e,n,t)=>{t?e.setAttribute(n,"boolean"==typeof t?"":t):e.removeAttribute(n)},delegateAttribute:(e,n,t,o)=>{o?(n.setAttribute(t,"boolean"==typeof o?"":o),e.removeAttribute(t)):n.removeAttribute(t)},replaceDefaultSlot:(e,n)=>{const t=e.querySelector("slot:not([name])");t&&t.replaceWith(n)},removeSlot:(e,n)=>{const t=e.querySelector(`slot[name="${n}"]`);t&&t.remove()},dispatchCustomEvent:(e,n,t)=>{const o=e.tagName.split("-")[0].toLowerCase(),r=new CustomEvent(o+"-"+n,t);return e.dispatchEvent(r),r}})),Be=[],Ue=[];function He(e,n){if(e&&"undefined"!=typeof document){var t,o=!0===n.prepend?"prepend":"append",r=!0===n.singleTag,s="string"==typeof n.container?document.querySelector(n.container):document.getElementsByTagName("head")[0];if(r){var i=Be.indexOf(s);-1===i&&(i=Be.push(s)-1,Ue[i]={}),t=Ue[i]&&Ue[i][o]?Ue[i][o]:Ue[i][o]=c()}else t=c();65279===e.charCodeAt(0)&&(e=e.substring(1)),t.styleSheet?t.styleSheet.cssText+=e:t.appendChild(document.createTextNode(e))}function c(){var e=document.createElement("style");if(e.setAttribute("type","text/css"),n.attributes)for(var t=Object.keys(n.attributes),r=0;r<t.length;r++)e.setAttribute(t[r],n.attributes[t[r]]);var i="prepend"===o?"afterbegin":"beforeend";return s.insertAdjacentElement(i,e),e}}var We="/***************************************\n * This file is automatically generated.\n * Please do not edit this file. Source file is common.css\n ***************************************/\n\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved\nLicensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* Document\n * --------------------- */\n\n/**\n * Normalize box sizing to border box for all browsers.\n */\n\n*,\n::before,\n::after {\n  box-sizing: border-box;\n}\n\n/* Grouping Content\n * --------------------- */\n\n/**\n * Add the correct display in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * 1. Remove the margin in all browsers.\n * 2. Remove the padding in all browsers.\n * 3. Normalize font sizes in all browsers.\n * 4. Normalize font weight in all browsers.\n */\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: 0.875rem; /* 3 */\n  font-weight: normal; /* 4 */\n  margin: 0; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Remove the margin in all browsers.\n */\n\np {\n  margin: 0;\n}\n\n/**\n * 1. Remove the margin in all browsers.\n * 2. Normalize border styles in all browsers.\n */\n\nhr {\n  margin: 0; /* 1 */\n  border: 0; /* 2 */\n  border-top-width: 1px; /* 2 */\n  border-style: solid; /* 2 */\n  border-color: inherit; /* 2 */\n}\n\n/**\n * 1. Remove the margin in all browsers.\n * 2. Remove the padding in all browsers.\n * 3. Remove the list-style in all browsers, sub-system dependant.\n */\n\nol,\nul {\n  list-style: none; /* 3 */\n  padding: 0; /* 2 */\n  margin: 0; /* 1 */\n}\n\n/**\n * Remove the margin in all browsers.\n */\n\ndl,\ndt,\ndd {\n  margin: 0;\n}\n\n/* Form Controls\n * --------------------- */\n\n/**\n * Remove the margin in all browsers.\n */\n\nform {\n  margin: 0;\n}\n\n/**\n * 1. Correct font properties not being inherited.\n * 2. Remove the margin in Firefox and Safari.\n * 3. Fix correct color not being inherited.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font: inherit; /* 1 */\n  margin: 0; /* 2 */\n  color: inherit; /* 3 */\n}\n\n/**\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\n */\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n/**\n * 1. Correct inability to style clickable `input` types in iOS.\n * 2. Normalizes cursor indicator on clickable elements.\n */\n\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n  -webkit-appearance: button; /* 1 */\n  appearance: button; /* 1 */\n  cursor: pointer; /* 2 */\n}\n\n/**\n * Prevent option or optgroup to increase the width of a select.\n */\n\nselect {\n  max-width: 100%;\n}\n\n/**\n * Correct the outline style in Safari.\n */\n\ninput:focus,\nbutton:focus,\nselect:focus,\ntextarea:focus {\n  outline-offset: 0;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\n::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * 1. Correct the text wrapping in Edge 18- and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.\n */\n\nlegend {\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  white-space: normal; /* 1 */\n  padding: 0; /* 3 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome and Firefox.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Safari.\n */\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type='search'] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to 'inherit' in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\n:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Remove the additional ':invalid' styles in Firefox.\n * See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737\n */\n\n:-moz-ui-invalid {\n  box-shadow: none;\n}\n\n/* Text-level semantics\n * --------------------- */\n\n/**\n * Normalizes cursor indicator on clickable elements.\n */\n\na {\n  cursor: pointer;\n}\n\n/**\n * Add the correct text decoration in Chrome, Edge, and Safari.\n */\n\nabbr[title] {\n  text-decoration: underline dotted;\n  cursor: help;\n}\n\n/**\n * Add the correct font weight in Edge and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n * 2. Correct the odd 'em' font sizing in all browsers.\n * 3. Remove the margin in all browsers.\n */\n\ncode,\nkbd,\nsamp,\npre {\n  font-family: ui-monospace, SFMono-Regular, Consolas, 'Liberation Mono', Menlo, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n  margin: 0; /* 3 */\n}\n\n/**\n * Prevent overflow of the container in all browsers\n */\n\npre {\n  overflow: auto;\n  -ms-overflow-style: scrollbar;\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n * --------------------- */\n\n/**\n * Change the alignment on media elements in all browsers.\n */\n\naudio,\ncanvas,\niframe,\nimg,\nsvg,\nvideo {\n  vertical-align: middle;\n}\n\n/**\n * Make images responsive by default.\n */\n\nimg,\n[type='image'] {\n  max-width: 100%;\n  height: auto;\n}\n\n/**\n * Remove the border on iframes in all browsers.\n */\n\niframe {\n  border-style: none;\n}\n\n/**\n * Change the fill color to match the text color in all browsers.\n */\n\nsvg:not([fill]) {\n  fill: currentColor;\n}\n\n/* Tabular data\n * --------------------- */\n\n/**\n * 1. Remove text indentation from table contents in Chrome and Safari. [Chromium Bug 999088](https://bugs.chromium.org/p/chromium/issues/detail?id=999088), [Webkit Bug 201297](https://bugs.webkit.org/show_bug.cgi?id=201297)\n * 2. Correct table border color inheritance in all Chrome and Safari. [Chromium Bug 935729](https://bugs.chromium.org/p/chromium/issues/detail?id=935729), [Webkit Bug 195016](https://bugs.webkit.org/show_bug.cgi?id=195016)\n * 3. Collapse border spacing in all browsers\n */\n\ntable {\n  text-indent: 0; /* 1 */\n  border-color: inherit; /* 2 */\n  border-collapse: collapse; /* 3 */\n}\n\n/* Shadow host\n * --------------------- */\n\n/**\n * 1. Change the line height in all browsers\n * 2. Change the base font size in all browsers, inherit 100% from `html`\n * 3. Prevent adjustments of font size after orientation changes in IE on Windows Phone and in iOS\n * 4. Remove the grey highlight on links in iOS\n * 5. Font Stack:\n *   a. Safari for OS X and iOS (San Francisco)\n *   b. Chrome < 56 for OS X (San Francisco)\n *   c. Windows\n *   d. Android\n *   e. Web Fallback\n *   f. Emoji font stack [Mac, Windows, Linux]\n */\n\n:host {\n  line-height: 1.5;\n  font-size: 0.875rem;\n  -webkit-tap-highlight-color: transparent;\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, 'Helvetica Neue', Arial, sans-serif,\n    'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n}\n";He(We,{});var Ve="/***************************************\n * This file is automatically generated.\n * Please do not edit this file. Source file is input-checkbox.css\n ***************************************/\n\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved\n  Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n:host {\n  /**\n   * Host mapping to composed sds-icon\n   *\n   * Static fallbacks in place for accessibility\n   */\n  --sds-c-icon-color-background: var(\n    --sds-c-inputcheckbox-color-background,\n    var(--sds-s-input-color-background, var(--sds-g-color-neutral-base-1))\n  );\n  --sds-c-icon-color-foreground: var(--sds-c-inputcheckbox-mark-color-foreground, transparent);\n  --sds-c-icon-color-border: var(\n    --sds-c-inputcheckbox-color-border,\n    var(--sds-s-input-color-border, var(--sds-g-color-neutral-base-contrast-4))\n  );\n  --sds-c-icon-sizing: var(--sds-c-inputcheckbox-sizing, 1rem);\n  --sds-c-icon-spacing: var(--sds-c-inputcheckbox-spacing);\n  --sds-c-icon-radius-border: var(--sds-c-inputcheckbox-radius-border, var(--sds-s-input-radius-border));\n}\n\n:host(:hover) {\n  --sds-c-inputcheckbox-mark-color-foreground: var(--sds-c-inputcheckbox-mark-color-foreground-hover);\n  --sds-c-inputcheckbox-color-background: var(\n    --sds-c-inputcheckbox-color-background-hover,\n    var(--sds-s-input-color-background-hover)\n  );\n  --sds-c-inputcheckbox-color-border: var(\n    --sds-c-inputcheckbox-color-border-hover,\n    var(--sds-s-input-color-border-hover)\n  );\n  --sds-c-inputcheckbox-label-color: var(--sds-c-inputcheckbox-label-color-hover);\n}\n\n:host([checked]) {\n  --sds-c-inputcheckbox-mark-color-foreground: var(\n    --sds-c-inputcheckbox-mark-color-foreground-checked,\n    var(--sds-g-color-neutral-base-1)\n  );\n  --sds-c-inputcheckbox-color-background: var(\n    --sds-c-inputcheckbox-color-background-checked,\n    var(--sds-g-color-neutral-base-contrast-4)\n  );\n  --sds-c-inputcheckbox-color-border: var(\n    --sds-c-inputcheckbox-color-border-checked,\n    var(--sds-g-color-neutral-base-contrast-4)\n  );\n  --sds-c-inputcheckbox-label-color: var(--sds-c-inputcheckbox-label-color-checked);\n}\n\n:host([checked]:hover) {\n  --sds-c-inputcheckbox-mark-color-foreground-checked: var(\n    --sds-c-inputcheckbox-mark-color-foreground-checked-hover\n  );\n  --sds-c-inputcheckbox-color-background-checked: var(--sds-c-inputcheckbox-color-background-checked-hover);\n  --sds-c-inputcheckbox-color-border-checked: var(--sds-c-inputcheckbox-color-border-checked-hover);\n  --sds-c-inputcheckbox-label-color-checked: var(\n    --sds-c-inputcheckbox-label-color-checked-hover,\n    var(--sds-c-inputcheckbox-label-color-hover)\n  );\n}\n\n:host([indeterminate]) {\n  --sds-c-inputcheckbox-mark-color-foreground: var(\n    --sds-c-inputcheckbox-mark-color-foreground-indeterminate,\n    #fff\n  );\n  --sds-c-inputcheckbox-color-background: var(\n    --sds-c-inputcheckbox-color-background-indeterminate,\n    var(--sds-s-input-color-background, #111)\n  );\n  --sds-c-inputcheckbox-color-border: var(\n    --sds-c-inputcheckbox-color-border-indeterminate,\n    var(--sds-s-input-color-border, #111)\n  );\n  --sds-c-inputcheckbox-label-color: var(--sds-c-inputcheckbox-label-color-indeterminate);\n}\n\n:host([indeterminate]:hover) {\n  --sds-c-inputcheckbox-mark-color-foreground-indeterminate: var(\n    --sds-c-inputcheckbox-mark-color-foreground-indeterminate-hover\n  );\n  --sds-c-inputcheckbox-color-background-indeterminate: var(\n    --sds-c-inputcheckbox-color-background-indeterminate-hover\n  );\n  --sds-c-inputcheckbox-color-border-indeterminate: var(\n    --sds-c-inputcheckbox-color-border-indeterminate-hover\n  );\n  --sds-c-inputcheckbox-label-color-indeterminate: var(\n    --sds-c-inputcheckbox-label-color-indeterminate-hover,\n    var(--sds-c-inputcheckbox-label-color-hover)\n  );\n}\n\n:host([focus-visible]) {\n  --sds-c-inputcheckbox-shadow: var(\n    --sds-c-inputcheckbox-shadow-focus,\n    var(--sds-s-input-shadow-focus, 0 0 4px 1px var(--sds-g-color-palette-blue-50))\n  );\n}\n\n:host([disabled]) {\n  --sds-c-inputcheckbox-color-background: var(\n    --sds-c-inputcheckbox-color-background-disabled,\n    var(--sds-s-input-color-background-disabled, #efefef)\n  );\n\n  /* TODO: Add shared border hook when available: https://github.com/salesforce-ux/salesforce-design-system/issues/272 */\n  --sds-c-inputcheckbox-color-border: var(--sds-c-inputcheckbox-color-border-disabled, #666);\n  --sds-c-inputcheckbox-label-color: var(--sds-c-inputcheckbox-label-color-disabled);\n}\n\n:host([error]) {\n  --sds-c-inputcheckbox-mark-color-foreground: var(--sds-c-inputcheckbox-mark-color-foreground-error);\n  --sds-c-inputcheckbox-color-background: var(--sds-c-inputcheckbox-color-background-error);\n  --sds-c-inputcheckbox-color-border: var(--sds-c-inputcheckbox-color-border-error);\n  --sds-c-inputcheckbox-label-color: var(--sds-c-inputcheckbox-label-color-error);\n}\n\n:host([disabled][checked]) {\n  --sds-c-inputcheckbox-mark-color-foreground: var(\n    --sds-c-inputcheckbox-mark-color-foreground-disabled,\n    #666\n  );\n}\n\n:host([error][focus-visible]) {\n  --sds-c-inputcheckbox-shadow: var(\n    --sds-c-inputcheckbox-shadow-error-focus,\n    0 0 4px 1px var(--sds-g-color-palette-blue-50)\n  );\n}\n\n[part~='input-checkbox'] {\n  display: inline-flex;\n  align-items: center;\n}\n\n[part~='indicator'] {\n  display: inline-flex;\n  align-items: center;\n  box-shadow: var(--sds-c-inputcheckbox-shadow, var(--sds-s-input-shadow));\n}\n\n/**\n * Size and position the input on top of our icon for accessibility\n */\n[part~='checkbox'] {\n  position: absolute;\n  height: calc(\n    var(--sds-c-inputcheckbox-sizing, 1rem) + (var(--sds-c-inputcheckbox-sizing-border, 1px) * 2) +\n      var(--sds-c-inputcheckbox-spacing, 0px)\n  );\n  width: calc(\n    var(--sds-c-inputcheckbox-sizing, 1rem) + (var(--sds-c-inputcheckbox-sizing-border, 1px) * 2) +\n      var(--sds-c-inputcheckbox-spacing, 0px)\n  );\n  opacity: 0.00001;\n}\n\n[part~='label'] {\n  padding-inline-start: var(--sds-c-inputcheckbox-label-spacing-inline-start);\n  color: var(--sds-c-inputcheckbox-label-color);\n}\n";He(Ve,{}),Object.assign(Ce,{required:!0,indeterminate:!0,autofocus:!0});class $e extends(Ne(je)){get[S](){return Object.assign(super[S],{indicator:"check",indeterminateIndicator:"dash",id:`input-checkbox-${Math.random().toString(16).slice(2)}`})}get checked(){return this[ie].checked}set checked(e){this[te]({checked:e})}get indeterminate(){return this[ie].indeterminate}set indeterminate(e){this[te]({indeterminate:e})}get disabled(){return this[ie].disabled}set disabled(e){this[te]({disabled:e})}get required(){return this[ie].required}set required(e){this[te]({required:e})}get name(){return this[ie].name}set name(e){this[te]({name:e})}get value(){return this[ie].value}set value(e){this[te]({value:e})}get id(){return this[ie].id}set id(e){this[te]({id:e})}get indicator(){return this[ie].indicator}set indicator(e){this[te]({indicator:e})}get indeterminateIndicator(){return this[ie].indeterminateIndicator}set indeterminateIndicator(e){this[te]({indeterminateIndicator:e})}get error(){return this[ie].error}set error(e){this[te]({error:e})}_handleChange(e){this[te]({checked:e.checked}),this[ie].indeterminate&&this[te]({indeterminate:!1}),Ge(this,"change")}_handleFocus(){Ge(this,"focus")}_handleBlur(){Ge(this,"blur")}_validateAttributes(){if(this[ie].checked&&this[ie].indeterminate)throw Error("The sds-input-checkbox can only be either checked or indeterminate; it cannot be both at the same time.")}[J](e){super[J](e);const n=this[m].querySelector('[part~="label"]'),t=this[m].querySelector('[part~="checkbox"'),o=this[m].querySelector("sds-icon"),{checked:r,indeterminate:s,required:i,disabled:c,name:a,value:l,id:d,indicator:h,indeterminateIndicator:u}=this[ie];this[A]&&t&&(t.addEventListener("change",(e=>{this._handleChange(t,e)})),t.addEventListener("focus",(e=>{this._handleFocus(e)})),t.addEventListener("blur",(e=>{this._handleBlur(e)})),this.checked&&t.setAttribute("checked","")),e.disabled&&(Xe(this,"disabled",c),Xe(t,"disabled",c)),e.required&&(Xe(this,"required",i),Xe(t,"required",i)),o&&e.indicator&&o.setAttribute("symbol",h),o&&e.indeterminateIndicator&&s&&o.setAttribute("symbol",u),e.checked&&(Xe(this,"checked",r),t.checked=r,r&&o&&o.setAttribute("symbol",h)),e.indeterminate&&(Xe(this,"indeterminate",s),t.indeterminate=s,s&&o&&o.setAttribute("symbol",u),s&&o&&o.setAttribute("prefetch",h)),e.name&&a&&_e.delegateAttribute(this,t,"name",a),e.value&&l&&_e.delegateAttribute(this,t,"value",l),e.id&&d&&(_e.delegateAttribute(this,t,"id",d),n.setAttribute("for",d)),(e.checked||e.indeterminate)&&this._validateAttributes()}get[ke](){return n.html(`
      <style>
        ${escapeXml(We)}
        ${escapeXml(Ve)}
      </style>
      ${'<div part="input-checkbox">\n  <input type="checkbox" id="checkbox-id" part="checkbox" />\n  <div part="indicator">\n    <slot name="indicator">\n      <sds-icon></sds-icon>\n    </slot>\n  </div>\n  <label part="label" for="checkbox-id">\n    <slot></slot>\n  </label>\n</div>\n'}
    `)}}function Xe(e,n,t){t?e.setAttribute(n,""):e.removeAttribute(n)}function Ge(e,n,t){const o=e.tagName.split("-")[0].toLowerCase(),r=new CustomEvent(o+"-"+n,t);return e.dispatchEvent(r),r}var Ze="/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved\n  Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n:host {\n  font-family: var(--wes-g-font-family-sans);\n  font-size: var(--wes-g-font-size-3);\n  --sds-c-inputcheckbox-color-background: var(--wes-g-color-neutral-base-100);\n  --sds-c-inputcheckbox-radius-border: var(--wes-g-radius-border-1);\n  --sds-c-inputcheckbox-label-color: var(--wes-g-color-palette-neutral-10);\n  --sds-c-inputcheckbox-label-spacing-inline-start: var(--wes-g-spacing-2);\n  --sds-s-input-color-border: var(--wes-g-color-palette-neutral-60);\n  --sds-c-inputcheckbox-color-background-hover: var(--wes-g-color-palette-blue-90);\n  --sds-c-inputcheckbox-color-border-hover: var(--wes-g-color-palette-neutral-50);\n  --sds-c-inputcheckbox-color-background-checked: var(--wes-g-color-palette-blue-50);\n  --sds-c-inputcheckbox-color-border-checked: var(--wes-g-color-palette-blue-50);\n  --sds-c-inputcheckbox-color-background-checked-hover: var(--wes-g-color-palette-blue-20);\n  --sds-c-inputcheckbox-color-border-checked-hover: var(--wes-g-color-palette-blue-20);\n  --sds-c-inputcheckbox-color-background-disabled: var(--wes-g-color-palette-neutral-95);\n  --sds-c-inputcheckbox-color-border-disabled: var(--wes-g-color-palette-neutral-80);\n  --sds-c-inputcheckbox-label-color-disabled: var(--wes-g-color-palette-neutral-50);\n  --sds-c-inputcheckbox-mark-color-foreground-disabled: var(--wes-g-color-palette-neutral-50);\n  --sds-c-inputcheckbox-color-border-error: var(--wes-g-color-palette-red-50);\n  --sds-c-inputcheckbox-color-background-indeterminate: var(--wes-g-color-palette-blue-50);\n  --sds-c-inputcheckbox-color-border-indeterminate: var(--wes-g-color-palette-blue-50);\n  --sds-c-inputcheckbox-color-background-indeterminate-hover: var(--wes-g-color-palette-cloud-blue-20);\n  --sds-c-inputcheckbox-color-border-indeterminate-hover: var(--wes-g-color-palette-blue-20);\n  --sds-c-inputcheckbox-sizing: 0.875rem;\n  --sds-c-inputcheckbox-shadow-error-focus: 0 0 4px 1px var(--wes-g-color-palette-red-50);\n  --sds-c-inputcheckbox-shadow-focus: none;\n  --sds-c-inputcheckbox-shadow-error-focus: none;\n}\n\n:host([error]) {\n  --sds-c-icon-sizing-border: var(--wes-g-radius-border-1);\n}\n\n:host([required]) [part~='label']::before {\n  content: '*';\n  display: inline-block;\n  color: var(--wes-g-color-palette-red-50);\n  width: 0.25rem;\n}\n\n:host([size='medium']) {\n  font-size: var(--wes-g-font-size-2);\n  --sds-c-inputcheckbox-sizing: 0.75rem;\n  --wes-c-input-checkbox-helptext-inline-start: 1.6rem;\n}\n\n:host([size='small']) {\n  font-size: var(--wes-g-font-size-1);\n  --sds-c-inputcheckbox-sizing: 0.625rem;\n  --wes-c-input-checkbox-helptext-font-size: var(--wes-g-font-scale-neg-4);\n  --wes-c-input-checkbox-helptext-inline-start: 1.4rem;\n}\n\n::slotted([slot='help-text']) {\n  font-size: var(--wes-c-input-checkbox-helptext-font-size, var(--wes-g-font-size-1));\n  color: var(--wes-g-color-palette-red-50);\n  display: flex;\n  padding-inline-start: var(--wes-c-input-checkbox-helptext-inline-start, 1.75rem);\n}\n\n:host([focus-visible]) [part~='indicator'] {\n  outline: 2px solid var(--wes-g-color-palette-blue-60);\n  outline-offset: 2px;\n  border-radius: 2px;\n}\n";He(Ze,{});class Je extends $e{get[S](){return Object.assign(super[S],{size:"default"})}get size(){return this[ie].size}set size(e){this[te]({size:e})}[J](e){if(super[J](e),e.size){const{size:e}=this[ie];_e.reflectAttribute(this,"size",e)}}get[ke](){const n=super[ke];return this.appendHelpTextSlot(n),n.content.append(e.html(`
        <style>
          ${escapeXml(Ze)}
        </style>
      `)),n}appendHelpTextSlot(e){const n=e.content.querySelector('slot[name="help-text"]'),t=e.content.querySelector('[part="input-checkbox"]');!n&&t&&t.insertAdjacentHTML("afterend",'<slot name="help-text"></slot>')}}return Je;
 
})();